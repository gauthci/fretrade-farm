from freqtrade.strategy.interface import IStrategy
from pandas import DataFrame
import talib.abstract as ta

class AggressiveRSIStrategy(IStrategy):
    timeframe = '5m'

    minimal_roi = {"0": 0.02}
    stoploss = -0.03

    order_types = {
        'entry': 'limit',
        'exit': 'limit',
        'stoploss': 'market',
        'stoploss_on_exchange': 'market',  # ajouté pour conformité
        'forceexit': 'market'              # ajouté pour conformité
    }

    order_time_in_force = {
        'entry': 'gtc',
        'exit': 'gtc'
    }

    process_only_new_candles = True
    startup_candle_count = 0
    position_adjustment_enable = False
    max_entry_position_adjustment = -1
    use_exit_signal = True
    exit_profit_only = False
    ignore_roi_if_entry_signal = False

    def populate_indicators(self, dataframe: DataFrame, metadata: dict) -> DataFrame:
        dataframe['rsi'] = ta.RSI(dataframe, timeperiod=14)
        dataframe['ema20'] = ta.EMA(dataframe, timeperiod=20)
        return dataframe

    def populate_buy_trend(self, dataframe: DataFrame, metadata: dict) -> DataFrame:
        # TEMPORAIRE : forcer un signal buy sur toutes les bougies pour tester
        dataframe['buy'] = 1
        return dataframe

    def populate_sell_trend(self, dataframe: DataFrame, metadata: dict) -> DataFrame:
        dataframe.loc[
            (dataframe['rsi'] > 53) | (dataframe['close'] < dataframe['ema20']),
            'sell'] = 1
        return dataframe

